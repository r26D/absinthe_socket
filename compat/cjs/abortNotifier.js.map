{"version":3,"file":"abortNotifier.js","sources":["../../src/notifier/observer/notifyAll.js","../../src/notifier/notify.js","../../src/notifier/findIndex.js","../../src/notifier/remove.js","../../src/updateNotifiers.js","../../src/notifier/event/eventNames.js","../../src/notifier/event/eventCreators.js","../../src/abortNotifier.js"],"sourcesContent":["// @flow\n\nimport type {Event, Observer} from \"../types\";\n\nconst getNotifier = (handlerName, payload) => observer =>\n  observer[handlerName] && observer[handlerName](payload);\n\nconst getHandlerName = ({name}) => `on${name}`;\n\nconst notifyAll = <Result, Variables: void | Object>(\n  observers: $ReadOnlyArray<Observer<Result, Variables>>,\n  event: Event\n) => observers.forEach(getNotifier(getHandlerName(event), event.payload));\n\nexport default notifyAll;\n","// @flow\n\nimport observerNotifyAll from \"./observer/notifyAll\";\n\nimport type {Event, Notifier} from \"./types\";\n\nconst getObservers = ({activeObservers, canceledObservers}) => [\n  ...activeObservers,\n  ...canceledObservers\n];\n\nconst notify = <Result, Variables: void | Object>(\n  notifier: Notifier<Result, Variables>,\n  event: Event\n) => {\n  observerNotifyAll(getObservers(notifier), event);\n\n  return notifier;\n};\n\nexport default notify;\n","// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"./types\";\n\nconst findIndex = (\n  notifiers: Array<Notifier<any, any>>,\n  key: string,\n  value: any\n) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.findIndex(hasIn([key], value));\n\nexport default findIndex;\n","// @flow\n\nimport {remove as arrayRemove} from \"@jumpn/utils-array\";\n\nimport findIndex from \"./findIndex\";\n\nimport type {Notifier} from \"./types\";\n\nconst remove = (notifier: Notifier<any, any>) => (\n  notifiers: Array<Notifier<any, any>>\n) =>\n  arrayRemove(findIndex(notifiers, \"request\", notifier.request), 1, notifiers);\n\nexport default remove;\n","// @flow\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier} from \"./notifier/types\";\n\ntype Notifiers = Array<Notifier<any, any>>;\n\nconst updateNotifiers = (\n  absintheSocket: AbsintheSocket,\n  updater: (notifiers: Notifiers) => Notifiers\n) => {\n  absintheSocket.notifiers = updater(absintheSocket.notifiers);\n\n  return absintheSocket;\n};\n\nexport default updateNotifiers;\n","// @flow\n\nconst eventNames = {\n  abort: (\"Abort\": \"Abort\"),\n  cancel: (\"Cancel\": \"Cancel\"),\n  error: (\"Error\": \"Error\"),\n  result: (\"Result\": \"Result\"),\n  start: (\"Start\": \"Start\")\n};\n\ntype EventName = $Values<typeof eventNames>;\n\nexport default eventNames;\n\nexport type {EventName};\n","// @flow\n\nimport eventNames from \"./eventNames\";\n\nimport type {\n  AbortEvent,\n  CancelEvent,\n  ErrorEvent,\n  Notifier,\n  ResultEvent,\n  StartEvent\n} from \"../types\";\n\nconst createStartEvent = <Payload: Notifier<any, any>>(\n  payload: Payload\n): StartEvent<Payload> => ({payload, name: eventNames.start});\n\nconst createResultEvent = <Result>(payload: Result): ResultEvent<Result> => ({\n  payload,\n  name: eventNames.result\n});\n\nconst createErrorEvent = (payload: Error): ErrorEvent => ({\n  payload,\n  name: eventNames.error\n});\n\nconst createCancelEvent = (): CancelEvent => ({\n  name: eventNames.cancel,\n  payload: undefined\n});\n\nconst createAbortEvent = (payload: Error): AbortEvent => ({\n  payload,\n  name: eventNames.abort\n});\n\nexport {\n  createStartEvent,\n  createResultEvent,\n  createErrorEvent,\n  createCancelEvent,\n  createAbortEvent\n};\n","// @flow\n\nimport notifierNotify from \"./notifier/notify\";\nimport notifierRemove from \"./notifier/remove\";\nimport updateNotifiers from \"./updateNotifiers\";\nimport {createAbortEvent} from \"./notifier/event/eventCreators\";\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier} from \"./notifier/types\";\n\nconst abortNotifier = (\n  absintheSocket: AbsintheSocket,\n  notifier: Notifier<any, any>,\n  error: Error\n) =>\n  updateNotifiers(\n    absintheSocket,\n    notifierRemove(notifierNotify(notifier, createAbortEvent(error)))\n  );\n\nexport default abortNotifier;\n"],"names":["getNotifier","handlerName","payload","observer","getHandlerName","name","notifyAll","observers","event","forEach","getObservers","activeObservers","canceledObservers","notify","notifier","observerNotifyAll","findIndex","notifiers","key","value","hasIn","remove","arrayRemove","request","updateNotifiers","absintheSocket","updater","eventNames","abort","cancel","error","result","start","createStartEvent","createResultEvent","createErrorEvent","createCancelEvent","undefined","createAbortEvent","abortNotifier","notifierRemove","notifierNotify"],"mappings":"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"}